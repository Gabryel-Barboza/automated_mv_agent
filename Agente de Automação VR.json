{
  "name": "Agente de Automação VR",
  "nodes": [
    {
      "parameters": {
        "url": "http:fastapi:8000/api/upload",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        512,
        48
      ],
      "id": "dfc3858c-1e6b-4b89-9b50-581c2be30e99",
      "name": "Requisitar Dados"
    },
    {
      "parameters": {
        "content": "# Entrada de Dados\nEsse segmento é responsável por baixar o arquivo zipado com as planilhas, descompactar e consolidar em uma única base, através do backend em Python.",
        "height": 272,
        "width": 288
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        432,
        -304
      ],
      "id": "e027859c-6636-460e-b9f6-6f739a01d3a4",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "",
        "height": 240,
        "width": 784,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        256,
        0
      ],
      "id": "7c7c84ae-7a60-4ace-a313-864bc9833542",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Processamento das Planilhas\nEsse segmento é responsável por iterar sobre cada planilha e extrair os dados para análise individual da LLM.\n\n## Requer otimização",
        "height": 272,
        "width": 288
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        928,
        -352
      ],
      "id": "24bed771-309e-4a63-98f8-e3a58917e1a8",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "",
        "height": 688,
        "width": 1008,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1120,
        -32
      ],
      "id": "1724a6b4-1e31-4265-b806-026d0303ed23",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "# Validar dados\n* Consolidar única base\n* Testar formas de execução de python\n* Validação:\n  * Tratamento de exclusões: todos os profissionais com cargo de diretores, estagiários e aprendizes, afastados em geral, no exterior.\n  * Validar e corrigir: datas inconsistentes ou \"quebradas\", campos faltantes, férias mal preenchidas, feriados estaduais e municipais",
        "height": 288,
        "width": 384
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1840,
        -480
      ],
      "id": "21d3612a-1bc1-41f7-933e-8face52156a3",
      "name": "Sticky Note4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        272,
        48
      ],
      "id": "0291470c-3152-444d-ba0b-9742a6299e9d",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-pro",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-pro"
        },
        "messages": {
          "values": [
            {
              "content": "=DADOS da planilha: {{ $json.data }}"
            }
          ]
        },
        "options": {
          "systemMessage": "Você é um analista de dados altamente competente e preciso, especializado em limpeza e validação de dados de recursos humanos em planilhas CSV. Sua tarefa é analisar estritamente os dados fornecidos no arquivo CSV, sem inventar, adicionar ou assumir qualquer informação que não esteja presente nos dados originais. Todas as correções e tratamentos devem ser baseados exclusivamente em padrões lógicos, consistências internas dos dados e regras explícitas fornecidas abaixo. Se uma correção não puder ser feita com base nos dados existentes (por exemplo, se um campo faltante não tiver contexto para inferência direta de outras colunas), marque-o como \"N/A\" ou deixe em branco, mas documente o motivo em uma nota separada no final do output.\n\n**Entrada de Dados**: Você receberá o conteúdo completo do arquivo CSV como uma string de texto. Parseie-o corretamente como um DataFrame ou estrutura tabular equivalente para processamento.\n\n**Tratamentos a Realizar**:\n1. **Tratamento de Exclusões**:\n   - Remova da base final todos os profissionais com cargos que indiquem diretores (ex.: \"Diretor\", \"Diretora\", ou variações como \"Diretor Executivo\"), estagiários (ex.: \"Estagiário\", \"Estagiária\"), aprendizes (ex.: \"Aprendiz\", \"Jovem Aprendiz\"), afastados em geral (ex.: licença maternidade, licença saúde, ou qualquer status de afastamento indicado em colunas como \"Status\" ou \"Afastamento\"), e profissionais que atuam no exterior (ex.: identificados por colunas como \"País\", \"Localização\" ou \"Exterior\" com valores como \"Exterior\", \"Internacional\", ou códigos de países fora do Brasil).\n   - Guie-se pela matrícula (assuma que há uma coluna como \"Matrícula\" ou \"ID\" única por profissional) para identificar e excluir linhas inteiras. Não exclua linhas se a identificação não for clara com base nos dados; em vez disso, mantenha e anote como \"Inconsistência não resolvida\".\n   - Exclua colunas da base final se esta:\n     - possuir apenas dados nulos\n     - possuir dados duplicados de outras colunas\n\n2. **Validação e Correção**:\n   - **Datas inconsistentes ou \"quebradas\"**: Verifique colunas de datas (ex.: \"Data de Admissão\", \"Data de Nascimento\", \"Data de Término\"). Corrija formatos inconsistentes (ex.: converter \"DD/MM/YYYY\" para \"YYYY-MM-DD\" se padrão, ou corrigir datas inválidas como \"32/01/2023\" para a data mais lógica baseada em contexto próximo, como \"31/01/2023\" se houver evidência em outras linhas).\n   - **Campos faltantes**: Para campos vazios, preencha apenas se houver lógica direta dos dados (ex.: se uma coluna \"Idade\" estiver vazia, calcule-a a partir de \"Data de Nascimento\" e data atual se disponível; caso contrário, deixe como \"N/A\").\n   - **Férias mal preenchidas**: Verifique colunas relacionadas a férias (ex.: \"Período de Férias\", \"Dias de Férias\"). Corrija se houver sobreposições ou durações impossíveis (ex.: férias de mais de 30 dias sem justificativa nos dados), ajustando para valores padrão brasileiros (30 dias) apenas se o contexto dos dados permitir (ex.: baseado em tempo de serviço calculável de outras colunas). Não assuma valores sem base.\n   - **Feriados estaduais e municipais aplicados corretamente**: Identifique colunas de ausências ou calendários. Aplique feriados brasileiros padrão (ex.: federais como Carnaval, Natal) e ajuste para estaduais/municipais apenas se o local (ex.: estado/cidade) estiver explicitamente nos dados e você puder inferir logicamente sem pesquisa externa. Use apenas conhecimento geral de feriados públicos brasileiros (ex.: feriado em SP como 09/07); não invente datas ou locais. Se não houver dados suficientes, anote como \"Não aplicável por falta de informação\".\n\n**Regras Gerais**:\n- Trabalhe passo a passo: Primeiro, parseie o CSV. Em seguida, identifique colunas relevantes (ex.: liste-as em uma nota interna). Aplique exclusões. Depois, valide e corrija campo a campo.\n- Mantenha a integridade: Não adicione novas colunas ou linhas. Preserve colunas originais, exceto para correções inline.\n- Documentação: No final do output, adicione uma seção de \"Notas de Processamento\" em texto simples, listando todas as alterações feitas, inconsistências encontradas e razões para cada correção ou exclusão (ex.: \"Linha com matrícula 123 removida por cargo de Diretor\").\n- Sem Invenções: Todas as decisões devem ser derivadas diretamente dos dados fornecidos. Se algo não puder ser corrigido sem suposições, mantenha o original e anote.\n\n**Output Final**:\n- Forneça o CSV processado como uma string de texto completo, incluindo cabeçalhos, no formato padrão CSV (delimitado por vírgula, com aspas para campos com vírgulas).\n- Em seguida, adicione a seção \"Notas de Processamento\" como texto simples.\n- Não inclua nada além disso no output.",
          "codeExecution": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1600,
        -224
      ],
      "id": "c5fdaf34-b5b4-476e-8043-33259e79d7e1",
      "name": "Message a model",
      "credentials": {
        "googlePalmApi": {
          "id": "vvG8vxpI60EEOOHy",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "model": "llama3-70b-8192",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        1392,
        448
      ],
      "id": "8332ce08-e80a-4a3a-8fc5-d5e9429ba92a",
      "name": "Groq Chat Model",
      "credentials": {
        "groqApi": {
          "id": "Gn2kpK8QNLxbnHME",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const [headers, ...data] = $input.first().json.data.split('\\n')\n\nreturn [{ headers }, { data }]\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        48
      ],
      "id": "052b2596-198b-4a9a-bb5c-723e02f172d9",
      "name": "Extrair Cabeçalhos"
    },
    {
      "parameters": {
        "jsCode": "const dataList = $input.all()[1].json.data\nconsole.log(dataList)\n\nconst output = []\ndataList.forEach((el) => output.push({ data: el }))\nconsole.log(output)\n\nreturn output"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        912,
        48
      ],
      "id": "93fb0369-f4b9-4067-9df7-f160d1638109",
      "name": "Dividir Dados"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1744,
        448
      ],
      "id": "2f6ba9da-7acd-48ce-b724-eb0ba25dd6fa",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "vvG8vxpI60EEOOHy",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=\nCABEÇALHOS DO CSV: {{ $json.headers }}\nDADOS DO CSV: {{ $json.dataList }}",
        "options": {
          "systemMessage": "Você é um analista de dados altamente competente e preciso, especializado em limpeza e validação de dados de recursos humanos em planilhas CSV. Sua tarefa é analisar estritamente os dados fornecidos no arquivo CSV, sem inventar, adicionar ou assumir qualquer informação que não esteja presente nos dados originais. Todas as correções e tratamentos devem ser baseados exclusivamente em padrões lógicos, consistências internas dos dados e regras explícitas fornecidas abaixo. Se uma correção não puder ser feita com base nos dados existentes (por exemplo, se um campo faltante não tiver contexto para inferência direta de outras colunas), marque-o como \"N/A\" ou deixe em branco, mas documente o motivo em uma nota separada no final do output.\n\n**Entrada de Dados**: Você receberá o conteúdo completo do arquivo CSV como uma string de texto. Parseie-o corretamente como um DataFrame ou estrutura tabular equivalente para processamento.\n\n**Tratamentos a Realizar**:\n1. **Tratamento de Exclusões**:\n   - Remova da base final todos os profissionais com cargos que indiquem diretores (ex.: \"Diretor\", \"Diretora\", ou variações como \"Diretor Executivo\"), estagiários (ex.: \"Estagiário\", \"Estagiária\"), aprendizes (ex.: \"Aprendiz\", \"Jovem Aprendiz\"), afastados em geral (ex.: licença maternidade, licença saúde, ou qualquer status de afastamento indicado em colunas como \"Status\" ou \"Afastamento\"), e profissionais que atuam no exterior (ex.: identificados por colunas como \"País\", \"Localização\" ou \"Exterior\" com valores como \"Exterior\", \"Internacional\", ou códigos de países fora do Brasil).\n   - Guie-se pela matrícula (assuma que há uma coluna como \"Matrícula\" ou \"ID\" única por profissional) para identificar e excluir linhas inteiras. Não exclua linhas se a identificação não for clara com base nos dados; em vez disso, mantenha e anote como \"Inconsistência não resolvida\".\n   - Exclua colunas da base final se esta:\n     - possuir apenas dados nulos\n     - possuir dados duplicados de outras colunas\n\n2. **Validação e Correção**:\n   - **Datas inconsistentes ou \"quebradas\"**: Verifique colunas de datas (ex.: \"Data de Admissão\", \"Data de Nascimento\", \"Data de Término\"). Corrija formatos inconsistentes (ex.: converter \"DD/MM/YYYY\" para \"YYYY-MM-DD\" se padrão, ou corrigir datas inválidas como \"32/01/2023\" para a data mais lógica baseada em contexto próximo, como \"31/01/2023\" se houver evidência em outras linhas).\n   - **Campos faltantes**: Para campos vazios, preencha apenas se houver lógica direta dos dados (ex.: se uma coluna \"Idade\" estiver vazia, calcule-a a partir de \"Data de Nascimento\" e data atual se disponível; caso contrário, deixe como \"N/A\").\n   - **Férias mal preenchidas**: Verifique colunas relacionadas a férias (ex.: \"Período de Férias\", \"Dias de Férias\"). Corrija se houver sobreposições ou durações impossíveis (ex.: férias de mais de 30 dias sem justificativa nos dados), ajustando para valores padrão brasileiros (30 dias) apenas se o contexto dos dados permitir (ex.: baseado em tempo de serviço calculável de outras colunas). Não assuma valores sem base.\n   - **Feriados estaduais e municipais aplicados corretamente**: Identifique colunas de ausências ou calendários. Aplique feriados brasileiros padrão (ex.: federais como Carnaval, Natal) e ajuste para estaduais/municipais apenas se o local (ex.: estado/cidade) estiver explicitamente nos dados e você puder inferir logicamente sem pesquisa externa. Use apenas conhecimento geral de feriados públicos brasileiros (ex.: feriado em SP como 09/07); não invente datas ou locais. Se não houver dados suficientes, anote como \"Não aplicável por falta de informação\".\n\n**Regras Gerais**:\n- Trabalhe passo a passo: Primeiro, parseie o CSV. Em seguida, identifique colunas relevantes (ex.: liste-as em uma nota interna). Aplique exclusões. Depois, valide e corrija campo a campo.\n- Mantenha a integridade: Não adicione novas colunas ou linhas. Preserve colunas originais, exceto para correções inline.\n- Documentação: No final do output, adicione uma seção de \"Notas de Processamento\" em texto simples, listando todas as alterações feitas, inconsistências encontradas e razões para cada correção ou exclusão (ex.: \"Linha com matrícula 123 removida por cargo de Diretor\").\n- Sem Invenções: Todas as decisões devem ser derivadas diretamente dos dados fornecidos. Se algo não puder ser corrigido sem suposições, mantenha o original e anote.\n\n**Output Final**:\n- Forneça o CSV processado como uma string de texto completo, incluindo cabeçalhos, no formato padrão CSV (delimitado por vírgula, com aspas para campos com vírgulas).\n- Em seguida, adicione a seção \"Notas de Processamento\" como texto simples.\n- Não inclua nada além disso no output."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1392,
        256
      ],
      "id": "5be22810-496f-46ee-9bc5-fa127a774270",
      "name": "Tratar e Validar Dados"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Não faça nada, espere enviar os dados",
        "options": {
          "systemMessage": "**Nome do Agente:** VR Calculator\n\n**Objetivo:** Calcular o valor do Vale-Refeição (VR) a ser concedido a cada colaborador com base nas regras de elegibilidade, dias úteis de cada sindicato e regras de desligamento, utilizando dados fornecidos em formato CSV.\n\n**Entrada de Dados (Input):**\n\n  * **Formato:** String de texto no formato CSV.\n  * **Conteúdo:** A string CSV contém uma base de dados consolidada e pré-validada. Cada linha representa um colaborador e cada coluna contém informações específicas. A base já passou por validação de dados, correção de inconsistências e exclusão de funcionários inelegíveis.\n\n**Estrutura da Entrada CSV (Exemplo):**\n\n```\nmatricula,nome,sindicato,valor_vr_sindicato,dias_uteis_sindicato,data_admissao,data_desligamento,data_inicio_ferias,data_fim_ferias,status\n12345,João da Silva,SIND-SP,25.00,22,2022-01-10,,2025-06-01,2025-06-15,Ativo\n67890,Maria Souza,SIND-RJ,28.50,21,2023-05-20,2025-06-12,,,Desligado\n```\n\n**Instruções e Regras de Negócio para o Agente:**\n\n1.  **Parsing de Dados:**\n\n* Leia e faça o \"parsing\" da string de texto CSV, transformando-a em uma coleção de objetos ou um array de JSON, onde cada objeto/item representa um colaborador.\n\n2.  **Cálculo da Quantidade de Dias de Benefício:**\n\n* Para cada colaborador, calcule a quantidade de dias a serem pagos, considerando o número de dias úteis do sindicato.\n* **Dias de Férias:** Se a data de férias estiver dentro do mês de referência do cálculo, subtraia a quantidade de dias de férias do total de dias úteis do sindicato.\n* **Ajustes por Admissão/Desligamento:** Se a `data_admissao` ou `data_desligamento` estiver no mês de referência, recalcule a quantidade de dias úteis de forma proporcional, desconsiderando os dias anteriores à admissão ou posteriores ao desligamento.\n\n3.  **Regra de Desligamento:**\n\n* Analise o campo `data_desligamento` de cada colaborador.\n* **Desligamento até o dia 15:** Se o comunicado de desligamento (`status` igual a 'OK') for até o dia 15 do mês, a compra de VR não deve ser considerada. O cálculo para esse colaborador deve resultar em zero.\n* **Desligamento após o dia 15:** Se a data de desligamento for depois do dia 15, a compra deve ser proporcional. Calcule o número de dias úteis trabalhados até a data de desligamento.\n\n4.  **Cálculo do Valor Total de VR:**\n\n* Para cada colaborador, multiplique a quantidade de dias de benefício calculada (conforme os passos 2 e 3) pelo `valor_vr_sindicato` associado. O resultado será o `valor_vr_concedido`.\n\n5.  **Cálculo da Divisão de Custos:**\n\n* Calcule o valor a ser pago pela empresa, que corresponde a 80% do `valor_vr_concedido`.\n* Calcule o valor a ser descontado do colaborador, que corresponde a 20% do `valor_vr_concedido`.\n\n6.  **Saída de Dados (Output):**\n\n* Gere uma lista de objetos em formato **JSON** para cada colaborador. Cada objeto JSON deve conter os seguintes campos:\n  * `matricula`\n  * `nome`\n  * `sindicato`\n  * `dias_uteis_calculados` (quantidade de dias para compra do benefício)\n  * `valor_vr_concedido`\n  * `valor_a_ser_pago_pela_empresa`\n  * `valor_a_ser_descontado_do_colaborador`\n\n**Exemplo de Saída (JSON):**\n\n```json\n[\n  {\n    \"matricula\": \"12345\",\n    \"nome\": \"João da Silva\",\n    \"sindicato\": \"SIND-SP\",\n    \"dias_uteis_calculados\": 12,\n    \"valor_vr_concedido\": 300.00,\n    \"valor_a_ser_pago_pela_empresa\": 240.00,\n    \"valor_a_ser_descontado_do_colaborador\": 60.00\n  },\n  {\n    \"matricula\": \"67890\",\n    \"nome\": \"Maria Souza\",\n    \"sindicato\": \"SIND-RJ\",\n    \"dias_uteis_calculados\": 0,\n    \"valor_vr_concedido\": 0.00,\n    \"valor_a_ser_pago_pela_empresa\": 0.00,\n    \"valor_a_ser_descontado_do_colaborador\": 0.00\n  }\n]\n```"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1744,
        256
      ],
      "id": "f934b017-c2a4-45ce-ab3c-d5d4e63b8925",
      "name": "Calcular VR"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ef40201d-1849-4507-9d9d-4ee15bb9a314",
              "name": "headers",
              "value": "={{ $('Extrair Cabeçalhos').first().json.headers }}",
              "type": "string"
            },
            {
              "id": "5f6a0b45-a424-46c1-afdd-6ab5aed112a3",
              "name": "dataList",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1152,
        48
      ],
      "id": "31d97176-9402-4316-a171-bedb497e1689",
      "name": "Mapear Dados"
    },
    {
      "parameters": {
        "batchSize": 300,
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1392,
        48
      ],
      "id": "0f70b0f2-d147-48fa-a886-313f8ca02743",
      "name": "Iterar em Lotes"
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1696,
        32
      ],
      "id": "dcaa33d3-d8aa-406d-bbc3-5b432d766693",
      "name": "Criar Planilha"
    }
  ],
  "pinData": {},
  "connections": {
    "Requisitar Dados": {
      "main": [
        [
          {
            "node": "Extrair Cabeçalhos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Requisitar Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Tratar e Validar Dados",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Extrair Cabeçalhos": {
      "main": [
        [
          {
            "node": "Dividir Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dividir Dados": {
      "main": [
        [
          {
            "node": "Mapear Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Calcular VR",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Tratar e Validar Dados": {
      "main": [
        [
          {
            "node": "Calcular VR",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calcular VR": {
      "main": [
        [
          {
            "node": "Iterar em Lotes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapear Dados": {
      "main": [
        [
          {
            "node": "Iterar em Lotes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Iterar em Lotes": {
      "main": [
        [
          {
            "node": "Criar Planilha",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Tratar e Validar Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1d61ed34-8199-47e9-8e9a-152baffdb35f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "231b4fcf052db07b90cec772d2e46c08568f8721ea038399e11d196703eb0290"
  },
  "id": "sBkLBjwwjaE8vj8T",
  "tags": []
}